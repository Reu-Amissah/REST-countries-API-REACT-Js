{"ast":null,"code":"var _jsxFileName = \"/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Screens/Details.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/Landing.css\";\nimport \"../Styles/Mq.css\";\nimport { DarkModeContext } from \"../Components/DarkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Details() {\n  _s();\n  var _filteredData$flags, _filteredData$name, _filteredData$name2;\n  const {\n    isDarkMode\n  } = useContext(DarkModeContext);\n  const {\n    id\n  } = useParams();\n  const [filteredData, setFilteredData] = useState(null);\n  useEffect(() => {\n    fetch(`https://restcountries.com/v3.1/all`).then(response => response.json()).then(responseJSON => {\n      // Check if responseJSON is not null or undefined\n      if (responseJSON != null) {\n        Object.keys(responseJSON).forEach(key => {\n          const res = responseJSON[key];\n          if (res && (res === null || res === void 0 ? void 0 : res.area) === parseInt(id)) {\n            console.log((res === null || res === void 0 ? void 0 : res.area) === parseInt(id) ? res : \"\");\n            setFilteredData(res);\n          }\n        });\n      }\n    }).catch(error => {\n      // Handle error\n      console.error(error);\n    });\n  }, [id]);\n  console.log(filteredData);\n  //\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const response = await fetch(`https://restcountries.com/v3.1/all`);\n  //       const jsonData = await response.json();\n\n  //       setCountryNameOfficial(jsonData[id].name.official);\n\n  //       // filtering through object-property(nativeName) using index of first property\n  //       setCountryNameNative(\n  //         jsonData[id].name.nativeName[\n  //           Object.keys(jsonData[id].name.nativeName)[0]\n  //         ].official\n  //       );\n  //       setCountryPopulation(jsonData[id].population);\n  //       setCountryRegion(jsonData[id].region);\n  //       setCountrySubRegion(jsonData[id].subregion);\n  //       setCountryDomain(jsonData[id].tld);\n  //       setCountryCapital(jsonData[id].capital[0]);\n  //       setCountryBorder(jsonData[id].borders);\n  //       setCountryFlag(jsonData[id].flags.png);\n\n  //       // filtering through object-property(Languages) using index of first property\n  //       setCountryLanguages(\n  //         jsonData[id].languages[Object.keys(jsonData[id].languages)[0]]\n  //       );\n\n  //       // filtering through object-property(currencies) using index of first property\n  //       setCountryCurrencies(\n  //         jsonData[id].currencies[Object.keys(jsonData[id].currencies)[0]].name\n  //       );\n\n  //       // console.log(jsonData[id]);\n  //     } catch (error) {\n  //       console.error(\"Error:\", error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, [id]);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `details-page ${isDarkMode ? \"dark-mode\" : \"\"}`,\n    id: \"details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: filteredData === null || filteredData === void 0 ? void 0 : (_filteredData$flags = filteredData.flags) === null || _filteredData$flags === void 0 ? void 0 : _filteredData$flags.png,\n      width: \"100%\",\n      alt: \"country-flag\",\n      style: {\n        height: \"auto\",\n        borderRadius: \"5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Native Name:\", \" \", filteredData === null || filteredData === void 0 ? void 0 : (_filteredData$name = filteredData.name) === null || _filteredData$name === void 0 ? void 0 : _filteredData$name.nativeName[Object.keys(filteredData === null || filteredData === void 0 ? void 0 : (_filteredData$name2 = filteredData.name) === null || _filteredData$name2 === void 0 ? void 0 : _filteredData$name2.nativeName)[0]].official]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Details, \"dbVqXALfktKpGJbK0JtVYGQRR4k=\", false, function () {\n  return [useParams];\n});\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","Link","DarkModeContext","jsxDEV","_jsxDEV","Details","_s","_filteredData$flags","_filteredData$name","_filteredData$name2","isDarkMode","id","filteredData","setFilteredData","fetch","then","response","json","responseJSON","Object","keys","forEach","key","res","area","parseInt","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","flags","png","width","alt","style","height","borderRadius","name","nativeName","official","_c","$RefreshReg$"],"sources":["/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Screens/Details.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/Landing.css\";\nimport \"../Styles/Mq.css\";\nimport { DarkModeContext } from \"../Components/DarkMode\";\n\nfunction Details() {\n  const { isDarkMode } = useContext(DarkModeContext);\n  const { id } = useParams();\n  const [filteredData, setFilteredData] = useState(null);\n\n  useEffect(() => {\n    fetch(`https://restcountries.com/v3.1/all`)\n      .then((response) => response.json())\n      .then((responseJSON) => {\n        // Check if responseJSON is not null or undefined\n        if (responseJSON != null) {\n          Object.keys(responseJSON).forEach((key) => {\n            const res = responseJSON[key];\n            if (res && res?.area === parseInt(id)) {\n              console.log(res?.area === parseInt(id) ? res : \"\");\n              setFilteredData(res);\n            }\n          });\n        }\n      })\n      .catch((error) => {\n        // Handle error\n        console.error(error);\n      });\n  }, [id]);\n\n  console.log(filteredData);\n  //\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const response = await fetch(`https://restcountries.com/v3.1/all`);\n  //       const jsonData = await response.json();\n\n  //       setCountryNameOfficial(jsonData[id].name.official);\n\n  //       // filtering through object-property(nativeName) using index of first property\n  //       setCountryNameNative(\n  //         jsonData[id].name.nativeName[\n  //           Object.keys(jsonData[id].name.nativeName)[0]\n  //         ].official\n  //       );\n  //       setCountryPopulation(jsonData[id].population);\n  //       setCountryRegion(jsonData[id].region);\n  //       setCountrySubRegion(jsonData[id].subregion);\n  //       setCountryDomain(jsonData[id].tld);\n  //       setCountryCapital(jsonData[id].capital[0]);\n  //       setCountryBorder(jsonData[id].borders);\n  //       setCountryFlag(jsonData[id].flags.png);\n\n  //       // filtering through object-property(Languages) using index of first property\n  //       setCountryLanguages(\n  //         jsonData[id].languages[Object.keys(jsonData[id].languages)[0]]\n  //       );\n\n  //       // filtering through object-property(currencies) using index of first property\n  //       setCountryCurrencies(\n  //         jsonData[id].currencies[Object.keys(jsonData[id].currencies)[0]].name\n  //       );\n\n  //       // console.log(jsonData[id]);\n  //     } catch (error) {\n  //       console.error(\"Error:\", error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, [id]);\n\n  return (\n    <section\n      className={`details-page ${isDarkMode ? \"dark-mode\" : \"\"}`}\n      id=\"details\"\n    >\n      <h1>hello</h1>\n      <img\n        src={filteredData?.flags?.png}\n        width={\"100%\"}\n        alt=\"country-flag\"\n        style={{ height: \"auto\", borderRadius: \"5px\" }}\n      ></img>\n      <div>\n        Native Name:{\" \"}\n        {\n          filteredData?.name?.nativeName[\n            Object.keys(filteredData?.name?.nativeName)[0]\n          ].official\n        }\n      </div>\n      {/* <h3 className=\"details-header\">{filteredData?.name?.official}</h3> */}\n      {/* <div className=\"details-container\">\n        <Link to={\"/\"}>\n          <div className=\"back-button\">\n            <span className=\"material-symbols-outlined\">\n              keyboard_backspace\n            </span>\n            <div style={{ paddingLeft: \"6px\" }}>Back</div>\n          </div>\n        </Link>\n\n        <div className=\"details-body\">\n          <div className=\"details-flag\">\n            <img\n              src={filteredData?.flags?.png}\n              width={\"100%\"}\n              alt=\"country-flag\"\n              style={{ height: \"auto\", borderRadius: \"5px\" }}\n            ></img>\n          </div>\n          <div className=\"details-content\">\n            <h3 className=\"details-header\">{filteredData?.name?.official}</h3>\n            <div className=\"details-sub-content\">\n              <div className=\"details-left\">\n                <div>\n                  Native Name:{\" \"}\n                  {\n                    filteredData?.name?.nativeName[\n                      Object.keys(filteredData?.name?.nativeName)[0]\n                    ].official\n                  }\n                </div>\n                <div>Population: {filteredData?.population}</div>\n                <div>Region: {filteredData?.region}</div>\n                <div>Sub Region: {filteredData?.subregion}</div>\n                <div>Capital: {filteredData?.capital[0]}</div>\n              </div>\n              <div className=\"details-right\">\n                <div>Top Level Domain: {filteredData?.tld}</div>\n                <div>\n                  Currencies:{\" \"}\n                  {\n                    filteredData?.currencies[\n                      Object.keys(filteredData.currencies)[0]\n                    ].name\n                  }\n                </div>\n                <div>\n                  Languages:{\" \"}\n                  {\n                    filteredData?.languages[\n                      Object.keys(filteredData?.languages)[0]\n                    ]\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"borders-content\">\n              <div style={{ marginRight: \"15px\", marginTop: \"10px\" }}>\n                Border Countries:{\" \"}\n              </div>\n              {Array.isArray(filteredData?.borders) ? (\n                <div className=\"border-items\">\n                  {filteredData?.borders.map((item, index) => (\n                    <Link to={`../border/${item}`}>\n                      <div className=\"borders\" key={index}>\n                        {item}\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"borders-container\">\n                  <div className=\"borders\">No Borders</div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </section>\n  );\n}\n\nexport default Details;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}