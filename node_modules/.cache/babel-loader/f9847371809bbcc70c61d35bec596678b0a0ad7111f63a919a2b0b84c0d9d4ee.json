{"ast":null,"code":"var _jsxFileName = \"/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Screens/Details.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Details() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [selectedData, setSelectedData] = useState({});\n  const [countryNameOfficial, setCountryNameOfficial] = useState(\"\");\n  const [countryNameNative, setCountryNameNative] = useState(\"\");\n  const [countryPopulation, setCountryPopulation] = useState(\"\");\n  const [countryRegion, setCountryRegion] = useState(\"\");\n  const [countrySubRegion, setCountrySubRegion] = useState(\"\");\n  const [countryDomain, setCountryDomain] = useState(\"\");\n  const [countryCapital, setCountryCapital] = useState(\"\");\n  const [countryLanguages, setCountryLanguages] = useState(\"\");\n  const [countryBorder, setCountryBorder] = useState(\"\");\n  const [countryFlag, setCountryFlag] = useState(\"\");\n  useEffect(() => {\n    // fetch(`https://restcountries.com/v3.1/${filterPath}/${filterSearch}`)\n    //   .then((response) => response.json())\n    //   .then((responseJSON) => {\n    //     setData(responseJSON);\n    //     console.log(responseJSON);\n    //   })\n    //   .catch((error) => {\n    //     //handle error\n    //   });\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://restcountries.com/v3.1/all`);\n        const jsonData = await response.json();\n        setCountryNameOfficial(jsonData[id].name.official);\n        setCountryNameNative(jsonData[id].name.nativeNmae);\n        setCountryPopulation(jsonData[id].population);\n        setCountryRegion(jsonData[id].region);\n        setCountrySubRegion(jsonData[id].subregion);\n        setCountryDomain(jsonData[id].tld);\n        setCountryCapital(jsonData[id].capital[0]);\n        setCountryLanguages(jsonData[id].languages);\n        setCountryBorder(jsonData[id].borders);\n        setCountryFlag(jsonData[id].flags.png);\n        console.log(jsonData[id]);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"9%\"\n      },\n      children: [countryNameOfficial, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryBorder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryCapital\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Details, \"zh9eF8DbP+nf653NO1tXUhU7v70=\", false, function () {\n  return [useParams];\n});\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Details","_s","id","selectedData","setSelectedData","countryNameOfficial","setCountryNameOfficial","countryNameNative","setCountryNameNative","countryPopulation","setCountryPopulation","countryRegion","setCountryRegion","countrySubRegion","setCountrySubRegion","countryDomain","setCountryDomain","countryCapital","setCountryCapital","countryLanguages","setCountryLanguages","countryBorder","setCountryBorder","countryFlag","setCountryFlag","fetchData","response","fetch","jsonData","json","name","official","nativeNmae","population","region","subregion","tld","capital","languages","borders","flags","png","console","log","error","children","style","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Screens/Details.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Details() {\n  const { id } = useParams();\n\n  const [selectedData, setSelectedData] = useState({});\n  const [countryNameOfficial, setCountryNameOfficial] = useState(\"\");\n  const [countryNameNative, setCountryNameNative] = useState(\"\");\n  const [countryPopulation, setCountryPopulation] = useState(\"\");\n  const [countryRegion, setCountryRegion] = useState(\"\");\n  const [countrySubRegion, setCountrySubRegion] = useState(\"\");\n  const [countryDomain, setCountryDomain] = useState(\"\");\n  const [countryCapital, setCountryCapital] = useState(\"\");\n  const [countryLanguages, setCountryLanguages] = useState(\"\");\n  const [countryBorder, setCountryBorder] = useState(\"\");\n  const [countryFlag, setCountryFlag] = useState(\"\");\n\n  useEffect(() => {\n    // fetch(`https://restcountries.com/v3.1/${filterPath}/${filterSearch}`)\n    //   .then((response) => response.json())\n    //   .then((responseJSON) => {\n    //     setData(responseJSON);\n    //     console.log(responseJSON);\n    //   })\n    //   .catch((error) => {\n    //     //handle error\n    //   });\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://restcountries.com/v3.1/all`);\n        const jsonData = await response.json();\n\n        setCountryNameOfficial(jsonData[id].name.official);\n        setCountryNameNative(jsonData[id].name.nativeNmae);\n        setCountryPopulation(jsonData[id].population);\n        setCountryRegion(jsonData[id].region);\n        setCountrySubRegion(jsonData[id].subregion);\n        setCountryDomain(jsonData[id].tld);\n        setCountryCapital(jsonData[id].capital[0]);\n        setCountryLanguages(jsonData[id].languages);\n        setCountryBorder(jsonData[id].borders);\n        setCountryFlag(jsonData[id].flags.png);\n\n        console.log(jsonData[id]);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div style={{ paddingTop: \"9%\" }}>\n        {countryNameOfficial}\n        <div>{countryBorder}</div>\n        <div>{countryCapital}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}