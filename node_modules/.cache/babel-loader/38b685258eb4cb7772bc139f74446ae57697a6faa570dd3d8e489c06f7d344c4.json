{"ast":null,"code":"var _jsxFileName = \"/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Components/DarkMode.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DarkModeContext = /*#__PURE__*/createContext();\nconst DarkModeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  // Define the context value\n  const contextValue = {\n    isDarkMode,\n    toggleDarkMode\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeProvider, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = DarkModeProvider;\nexport default DarkModeProvider;\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","useState","createContext","jsxDEV","_jsxDEV","DarkModeContext","DarkModeProvider","_ref","_s","children","isDarkMode","setIsDarkMode","toggleDarkMode","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Components/DarkMode.js"],"sourcesContent":["import React from \"react\";\nimport { useState, createContext } from \"react\";\n\nexport const DarkModeContext = createContext();\n\nconst DarkModeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  // Define the context value\n  const contextValue = {\n    isDarkMode,\n    toggleDarkMode,\n  };\n  return (\n    <DarkModeContext.Provider value={contextValue}>\n      {children}\n    </DarkModeContext.Provider>\n  );\n};\n\nexport default DarkModeProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,eAAe,gBAAGH,aAAa,EAAE;AAE9C,MAAMI,gBAAgB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG;IACnBH,UAAU;IACVE;EACF,CAAC;EACD,oBACER,OAAA,CAACC,eAAe,CAACS,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAJ,QAAA,EAC3CA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACgB;AAE/B,CAAC;AAACX,EAAA,CAlBIF,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAoBtB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}