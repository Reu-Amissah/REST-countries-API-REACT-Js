{"ast":null,"code":"var _jsxFileName = \"/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Screens/Details.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Details() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [countryNameOfficial, setCountryNameOfficial] = useState(\"\");\n  const [countryNameNative, setCountryNameNative] = useState(\"\");\n  const [countryPopulation, setCountryPopulation] = useState(\"\");\n  const [countryRegion, setCountryRegion] = useState(\"\");\n  const [countrySubRegion, setCountrySubRegion] = useState(\"\");\n  const [countryDomain, setCountryDomain] = useState(\"\");\n  const [countryCapital, setCountryCapital] = useState(\"\");\n  const [countryLanguages, setCountryLanguages] = useState(\"\");\n  const [countryBorder, setCountryBorder] = useState(\"\");\n  const [countryFlag, setCountryFlag] = useState(\"\");\n  useEffect(() => {\n    // fetch(`https://restcountries.com/v3.1/${filterPath}/${filterSearch}`)\n    //   .then((response) => response.json())\n    //   .then((responseJSON) => {\n    //     setData(responseJSON);\n    //     console.log(responseJSON);\n    //   })\n    //   .catch((error) => {\n    //     //handle error\n    //   });\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://restcountries.com/v3.1/all`);\n        const jsonData = await response.json();\n        setCountryNameOfficial(jsonData[id].name.official);\n        setCountryNameNative(jsonData[id].name.nativeNamee);\n        setCountryPopulation(jsonData[id].population);\n        setCountryRegion(jsonData[id].region);\n        setCountrySubRegion(jsonData[id].subregion);\n        setCountryDomain(jsonData[id].tld);\n        setCountryCapital(jsonData[id].capital[0]);\n        setCountryLanguages(jsonData[id].languages);\n        setCountryBorder(jsonData[id].borders);\n        setCountryFlag(jsonData[id].flags.png);\n        console.log(jsonData[id]);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"9%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryPopulation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryRegion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryNameNative\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countrySubRegion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryDomain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryFlag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryLanguages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), countryNameOfficial, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryBorder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryCapital\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Details, \"5J0WKHQQvpgSAavkoHZdHFLisGY=\", false, function () {\n  return [useParams];\n});\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Details","_s","id","countryNameOfficial","setCountryNameOfficial","countryNameNative","setCountryNameNative","countryPopulation","setCountryPopulation","countryRegion","setCountryRegion","countrySubRegion","setCountrySubRegion","countryDomain","setCountryDomain","countryCapital","setCountryCapital","countryLanguages","setCountryLanguages","countryBorder","setCountryBorder","countryFlag","setCountryFlag","fetchData","response","fetch","jsonData","json","name","official","nativeNamee","population","region","subregion","tld","capital","languages","borders","flags","png","console","log","error","children","style","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/r.amissah/Movies/web-Dev/REST-countries-API-REACT-Typescript/src/Screens/Details.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Details() {\n  const { id } = useParams();\n\n  const [countryNameOfficial, setCountryNameOfficial] = useState(\"\");\n  const [countryNameNative, setCountryNameNative] = useState(\"\");\n  const [countryPopulation, setCountryPopulation] = useState(\"\");\n  const [countryRegion, setCountryRegion] = useState(\"\");\n  const [countrySubRegion, setCountrySubRegion] = useState(\"\");\n  const [countryDomain, setCountryDomain] = useState(\"\");\n  const [countryCapital, setCountryCapital] = useState(\"\");\n  const [countryLanguages, setCountryLanguages] = useState(\"\");\n  const [countryBorder, setCountryBorder] = useState(\"\");\n  const [countryFlag, setCountryFlag] = useState(\"\");\n\n  useEffect(() => {\n    // fetch(`https://restcountries.com/v3.1/${filterPath}/${filterSearch}`)\n    //   .then((response) => response.json())\n    //   .then((responseJSON) => {\n    //     setData(responseJSON);\n    //     console.log(responseJSON);\n    //   })\n    //   .catch((error) => {\n    //     //handle error\n    //   });\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://restcountries.com/v3.1/all`);\n        const jsonData = await response.json();\n\n        setCountryNameOfficial(jsonData[id].name.official);\n        setCountryNameNative(jsonData[id].name.nativeNamee);\n        setCountryPopulation(jsonData[id].population);\n        setCountryRegion(jsonData[id].region);\n        setCountrySubRegion(jsonData[id].subregion);\n        setCountryDomain(jsonData[id].tld);\n        setCountryCapital(jsonData[id].capital[0]);\n        setCountryLanguages(jsonData[id].languages);\n        setCountryBorder(jsonData[id].borders);\n        setCountryFlag(jsonData[id].flags.png);\n\n        console.log(jsonData[id]);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div style={{ paddingTop: \"9%\" }}>\n        <div>{countryPopulation}</div>\n        <div>{countryRegion}</div>\n        <div>{countryNameNative}</div>\n        <div>{countrySubRegion}</div>\n        <div>{countryDomain}</div>\n        <div>{countryFlag}</div>\n        <div>{countryLanguages}</div>\n        {countryNameOfficial}\n        <div>{countryBorder}</div>\n        <div>{countryCapital}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}